<?xml version="1.0" encoding="UTF-8"?>
<genmodel:GenModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:genmodel="http://www.eclipse.org/emf/2002/GenModel" modelDirectory="/jsonmetaschemaMM/src-gen" editDirectory="/jsonmetaschemaMM.edit/src-gen"
    editorDirectory="/jsonmetaschemaMM.editor/src-gen" modelPluginID="jsonmetaschemaMM"
    modelName="JsonMetaschemaMM" rootExtendsClass="org.eclipse.emf.ecore.impl.MinimalEObjectImpl$Container"
    importerID="org.eclipse.emf.importer.ecore" complianceLevel="11.0" copyrightFields="false"
    usedGenPackages="../../jsonMM/model/jsonMM.genmodel#//jsonMM" operationReflection="true"
    importOrganizing="true">
  <foreignModel>jsonMetaschemaMM.ecore</foreignModel>
  <genPackages prefix="JsonMetaschemaMM" disposableProviderFactory="true" ecorePackage="jsonMetaschemaMM.ecore#/">
    <genEnums typeSafeEnumCompatible="false" ecoreEnum="jsonMetaschemaMM.ecore#//SimpleTypes">
      <genEnumLiterals ecoreEnumLiteral="jsonMetaschemaMM.ecore#//SimpleTypes/array"/>
      <genEnumLiterals ecoreEnumLiteral="jsonMetaschemaMM.ecore#//SimpleTypes/boolean"/>
      <genEnumLiterals ecoreEnumLiteral="jsonMetaschemaMM.ecore#//SimpleTypes/integer"/>
      <genEnumLiterals ecoreEnumLiteral="jsonMetaschemaMM.ecore#//SimpleTypes/null"/>
      <genEnumLiterals ecoreEnumLiteral="jsonMetaschemaMM.ecore#//SimpleTypes/number"/>
      <genEnumLiterals ecoreEnumLiteral="jsonMetaschemaMM.ecore#//SimpleTypes/object"/>
      <genEnumLiterals ecoreEnumLiteral="jsonMetaschemaMM.ecore#//SimpleTypes/string"/>
    </genEnums>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ObjectSchema">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/keywordDefinition"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/additionalItems"
          suppressedGetVisibility="false" suppressedSetVisibility="true" suppressedIsSetVisibility="true"
          suppressedUnsetVisibility="true" get="return (AdditionalItemsSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof AdditionalItemsSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/items"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (ItemsSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof ItemsSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/additionalProperties"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (AdditionalPropertiesSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof AdditionalPropertiesSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/contains"
          suppressedGetVisibility="false" suppressedSetVisibility="true" suppressedIsSetVisibility="true"
          suppressedUnsetVisibility="true" get="return (ContainsSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof ContainsSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/properties"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (PropertiesSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof PropertiesSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/definitions"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (DefinitionsSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof DefinitionsSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/patternProperties"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (PatternPropertiesSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof PatternPropertiesSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/dependencies"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (DependenciesSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof DependenciesSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/propertyNames"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (PropertyNamesSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof PropertyNamesSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/if"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (IfSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof IfSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/then"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (ThenSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof ThenSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/else"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (ElseSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof ElseSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/allOf"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (AllOfSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof AllOfSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/anyOf"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (AnyOfSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof AnyOfSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/oneOf"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (OneOfSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof OneOfSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/not"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (NotSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof NotSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/ref"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (RefSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof RefSchemaDefinition).findFirst().orElse(null);">
        <genAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="set" value="return;"/>
          <details key="body-set" value="return;"/>
        </genAnnotations>
      </genFeatures>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/type"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return (TypeSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof TypeSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/enum"
          get="return (EnumSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof EnumSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/schemaObjectAdditionalProperties"
          suppressedSetVisibility="true" suppressedIsSetVisibility="true" suppressedUnsetVisibility="true"
          get="return new org.eclipse.emf.common.util.BasicEList&lt;SchemaObjectAdditionalProperties>((Collection&lt;? extends SchemaObjectAdditionalProperties>) getKeywordDefinition().stream().filter(kd -> kd instanceof SchemaObjectAdditionalProperties).collect(java.util.stream.Collectors.toList()))  ;"/>
      <genFeatures property="Readonly" notify="false" createChild="false" propertySortChoices="true"
          ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/multipleOf"
          get="return (MultipleOfSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof MultipleOfSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" propertySortChoices="true"
          ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/minProperties"
          get="return (MinPropertiesSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof MinPropertiesSchemaDefinition).findFirst().orElse(null);"/>
      <genFeatures property="Readonly" notify="false" createChild="false" propertySortChoices="true"
          ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ObjectSchema/maxProperties"
          get="return (MaxPropertiesSchemaDefinition) getKeywordDefinition().stream().filter(kd -> kd instanceof MaxPropertiesSchemaDefinition).findFirst().orElse(null);"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//ObjectSchema/findSchemaByKey"
          body="return getSchemaObjectAdditionalProperties().stream().filter(s -> key.equals(s.getKey())).findFirst().map(SchemaObjectAdditionalProperties::getAdditionalProperties).orElse(null);">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//ObjectSchema/findSchemaByKey/key"/>
      </genOperations>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//ObjectSchema/findSchemaByJsonPointer"
          body="Schema schema = null;&#xA;if(currentIndex==jsonPointer.size()) {&#xA;&#x9;schema=this;&#xA;}else if(0 &lt;= currentIndex &amp;&amp; currentIndex &lt; jsonPointer.size()) {&#xA;&#x9;String currentToken = jsonPointer.get(currentIndex);&#xA;&#x9;Integer nextIndex= currentIndex +1;&#xA;&#x9;Schema nextSchema = null;&#xA;&#x9;if(&quot;additionalItems&quot;.equals(currentToken)) {&#xA;&#x9;&#x9;nextSchema = getAdditionalItems().getAdditionalItems();&#xA;&#x9;}else if (&quot;items&quot;.equals(currentToken)) {&#xA;&#x9;&#x9;if(getItems().getAnyOf() instanceof jsonMetaschemaMM.ItemsAnyOf1) {&#xA;&#x9;&#x9;&#x9;nextSchema= ((jsonMetaschemaMM.ItemsAnyOf1)getItems().getAnyOf()).getAnyOf1();&#xA;&#x9;&#x9;}else { // getItems().getAnyOf() instanceof jsonMetaschemaMM.ItemsAnyOf2&#xA;&#x9;&#x9;&#x9;nextSchema = ((jsonMetaschemaMM.ItemsAnyOf2)getItems().getAnyOf()).getAnyOf2().findSchemaByIndex(Integer.parseInt(jsonPointer.get(nextIndex)));&#xA;&#x9;&#x9;&#x9;nextIndex++;&#xA;&#x9;&#x9;}&#xA;&#x9;}else if (&quot;additionalProperties&quot;.equals(currentToken)) {&#xA;&#x9;&#x9;nextSchema = getAdditionalProperties().getAdditionalProperties();&#xA;&#x9;}else if (&quot;contains&quot;.equals(currentToken)) {&#xA;&#x9;&#x9;nextSchema = getContains().getContains();&#xA;&#x9;}else if (&quot;definitions&quot;.equals(currentToken)) {&#xA;&#x9;&#x9;if(nextIndex &lt;jsonPointer.size()) {&#xA;&#x9;&#x9;&#x9;nextSchema = getDefinitions().findSchemaByKey(&quot;\&quot;&quot;+jsonPointer.get(nextIndex)+&quot;\&quot;&quot;);&#xA;&#x9;&#x9;&#x9;nextIndex++;&#xA;&#x9;&#x9;}&#xA;&#x9;}else if (&quot;properties&quot;.equals(currentToken)) {&#xA;&#x9;&#x9;if(nextIndex &lt;jsonPointer.size()) {&#xA;&#x9;&#x9;&#x9;nextSchema = getProperties().findSchemaByKey(&quot;\&quot;&quot;+jsonPointer.get(nextIndex)+&quot;\&quot;&quot;);&#xA;&#x9;&#x9;&#x9;nextIndex++;&#xA;&#x9;&#x9;}&#xA;&#x9;}else if (&quot;patternProperties&quot;.equals(currentToken)) {&#xA;&#x9;&#x9;if(nextIndex &lt;jsonPointer.size()) {&#xA;&#x9;&#x9;&#x9;nextSchema = getPatternProperties().findSchemaByKey(&quot;\&quot;&quot;+jsonPointer.get(nextIndex)+&quot;\&quot;&quot;);&#xA;&#x9;&#x9;&#x9;nextIndex++;&#xA;&#x9;&#x9;}&#xA;&#x9;}else if (&quot;dependencies&quot;.equals(currentToken)) {&#xA;&#x9;&#x9;if(nextIndex &lt;jsonPointer.size()) {&#xA;&#x9;&#x9;&#x9;nextSchema = getDependencies().findSchemaByKey(&quot;\&quot;&quot;+jsonPointer.get(nextIndex)+&quot;\&quot;&quot;);&#xA;&#x9;&#x9;&#x9;nextIndex++;&#xA;&#x9;&#x9;}&#xA;&#x9;}else if (&quot;propertyNames&quot;.equals(currentToken)) {&#xA;&#x9;&#x9;nextSchema = getPropertyNames().getPropertyNames();&#xA;&#x9;}else if (&quot;if&quot;.equals(currentToken)) {&#xA;&#x9;&#x9;nextSchema = getIf().getIf();&#xA;&#x9;}else if (&quot;then&quot;.equals(currentToken)) {&#xA;&#x9;&#x9;nextSchema = getThen().getThen();&#xA;&#x9;}else if (&quot;else&quot;.equals(currentToken)) {&#xA;&#x9;&#x9;nextSchema = getElse().getElse();&#xA;&#x9;}else if (&quot;allOf&quot;.equals(currentToken)) {&#xA;&#x9;&#x9;nextSchema = getAllOf().getAllOf().findSchemaByIndex(Integer.parseInt(jsonPointer.get(nextIndex)));&#xA;&#x9;&#x9;nextIndex++;&#xA;&#x9;}else if (&quot;anyOf&quot;.equals(currentToken)) {&#xA;&#x9;&#x9;nextSchema = getAnyOf().getAnyOf().findSchemaByIndex(Integer.parseInt(jsonPointer.get(nextIndex)));&#xA;&#x9;&#x9;nextIndex++;&#xA;&#x9;}else if (&quot;oneOf&quot;.equals(currentToken)) {&#xA;&#x9;&#x9;nextSchema = getOneOf().getOneOf().findSchemaByIndex(Integer.parseInt(jsonPointer.get(nextIndex)));&#xA;&#x9;&#x9;nextIndex++;&#xA;&#x9;}else if (&quot;not&quot;.equals(currentToken)) {&#xA;&#x9;&#x9;nextSchema = getNot().getNot();&#xA;&#x9;}else {&#xA;&#x9;&#x9;nextSchema = findSchemaByKey(currentToken);&#xA;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;if(nextSchema!=null) {&#xA;&#x9;&#x9;schema = nextSchema.findSchemaByJsonPointer(jsonPointer, nextIndex);&#xA;&#x9;}&#xA;}&#xA;return schema;">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//ObjectSchema/findSchemaByJsonPointer/jsonPointer"/>
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//ObjectSchema/findSchemaByJsonPointer/currentIndex"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//MaximumSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//MaximumSchemaDefinition/maximum"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//WriteOnlySchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//WriteOnlySchemaDefinition/writeOnly"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//CommentSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//CommentSchemaDefinition/comment"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//EnumSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//EnumSchemaDefinition/items"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//UniqueItemsSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//UniqueItemsSchemaDefinition/uniqueItems"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//AnyOfSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//AnyOfSchemaDefinition/anyOf"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//StringArray">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//StringArray/values"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//TitleSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//TitleSchemaDefinition/title"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ItemsSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ItemsSchemaDefinition/anyOf"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//DefaultSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//DefaultSchemaDefinition/default"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ThenSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ThenSchemaDefinition/then"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//MinLengthSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//MinLengthSchemaDefinition/minLength"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//DefinitionsSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//DefinitionsSchemaDefinition/keySchemaPairs"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//DefinitionsSchemaDefinition/findSchemaByKey"
          body="return getKeySchemaPairs().stream().filter(ksp -> key.equals(ksp.getKey())).findFirst().map(KeySchemaPair::getValue).orElse(null);">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//DefinitionsSchemaDefinition/findSchemaByKey/key"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//MinItemsSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//MinItemsSchemaDefinition/minItems"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//OneOfSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//OneOfSchemaDefinition/oneOf"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//SchemaArray">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//SchemaArray/items"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//SchemaArray/findSchemaByIndex"
          body="Schema schema =null;&#xA;if(0 &lt;= index &amp;&amp; index &lt; getItems().size()) {&#xA;&#x9;schema = getItems().get(index);&#xA;}&#xA;return schema;">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//SchemaArray/findSchemaByIndex/index"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//MaxPropertiesSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//MaxPropertiesSchemaDefinition/maxProperties"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//MinimumSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//MinimumSchemaDefinition/minimum"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//MaxItemsSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//MaxItemsSchemaDefinition/maxItems"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//FormatSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//FormatSchemaDefinition/format"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ReadOnlySchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//ReadOnlySchemaDefinition/readOnly"/>
    </genClasses>
    <genClasses image="false" ecoreClass="jsonMetaschemaMM.ecore#//Schema">
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//Schema/findSchemaByJsonPointer">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//Schema/findSchemaByJsonPointer/jsonPointer"/>
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//Schema/findSchemaByJsonPointer/currentIndex"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//TypeSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//TypeSchemaDefinition/anyOf"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//AdditionalPropertiesSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//AdditionalPropertiesSchemaDefinition/additionalProperties"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ElseSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ElseSchemaDefinition/else"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//IdSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//IdSchemaDefinition/id"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ConstSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ConstSchemaDefinition/const"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//DependenciesSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//DependenciesSchemaDefinition/properties"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//DependenciesSchemaDefinition/findSchemaByKey"
          body="Schema schema = null; &#xA;jsonMetaschemaMM.SchemaObjectDependenciesAdditionalProperties schemaObjectDependenciesAdditionalProperties = (jsonMetaschemaMM.SchemaObjectDependenciesAdditionalProperties) getProperties().stream().filter(p -> p instanceof jsonMetaschemaMM.SchemaObjectDependenciesAdditionalProperties &amp;&amp; key.equals(((jsonMetaschemaMM.SchemaObjectDependenciesAdditionalProperties)p).getKey())).findFirst().orElse(null);&#xA;if(schemaObjectDependenciesAdditionalProperties!=null ) {&#xA;&#x9;jsonMetaschemaMM.SchemaObjectDependenciesAdditionalPropertiesAnyOf additionalPropertiesAnyOf= schemaObjectDependenciesAdditionalProperties.getAdditionalProperties();&#xA;&#x9;if(additionalPropertiesAnyOf instanceof jsonMetaschemaMM.SchemaObjectDependenciesAdditionalPropertiesAnyOf1) {&#xA;&#x9;&#x9;schema = ((jsonMetaschemaMM.SchemaObjectDependenciesAdditionalPropertiesAnyOf1)additionalPropertiesAnyOf).getAnyOf1();&#xA;&#x9;}&#xA;}&#xA;return schema;&#xA;">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//DependenciesSchemaDefinition/findSchemaByKey/key"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//RequiredSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//RequiredSchemaDefinition/required"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//DescriptionSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//DescriptionSchemaDefinition/description"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//MinPropertiesSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//MinPropertiesSchemaDefinition/minProperties"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//PatternPropertiesSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//PatternPropertiesSchemaDefinition/keySchemaPairs"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//PatternPropertiesSchemaDefinition/findSchemaByKey"
          body="return getKeySchemaPairs().stream().filter(ksp -> key.equals(ksp.getKey())).findFirst().map(KeySchemaPair::getValue).orElse(null);">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//PatternPropertiesSchemaDefinition/findSchemaByKey/key"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//AdditionalItemsSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//AdditionalItemsSchemaDefinition/additionalItems"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ExamplesSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ExamplesSchemaDefinition/examples"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//IfSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//IfSchemaDefinition/if"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//AllOfSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//AllOfSchemaDefinition/allOf"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ContentEncodingSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//ContentEncodingSchemaDefinition/contentEncoding"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//MultipleOfSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//MultipleOfSchemaDefinition/multipleOf"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//PatternSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//PatternSchemaDefinition/pattern"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//PatternSchemaDefinition/isValidPattern"
          body="try{&#xA;&#x9;java.util.regex.Pattern.compile(this.pattern);&#xA;}catch (java.util.regex.PatternSyntaxException e){&#xA;&#x9;return false;&#xA;}&#xA;return true;&#xA;"/>
    </genClasses>
    <genClasses image="false" ecoreClass="jsonMetaschemaMM.ecore#//KeywordDefinition"/>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ContainsSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ContainsSchemaDefinition/contains"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//NotSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//NotSchemaDefinition/not"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ExclusiveMaximumSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//ExclusiveMaximumSchemaDefinition/exclusiveMaximum"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//MaxLengthSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//MaxLengthSchemaDefinition/maxLength"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//RefSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//RefSchemaDefinition/ref"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//RefSchemaDefinition/isFormatUriReference"
          body="boolean isUri = true; &#xA;try {&#xA;&#x9;jakarta.ws.rs.core.UriBuilder.fromUri(getRef());&#xA;} catch (Exception e) {&#xA;&#x9;isUri=false;&#xA;}&#xA;return isUri;"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//RefSchemaDefinition/getFragment"
          body="try {&#xA;&#x9;return getRef().substring(getRef().indexOf(&quot;#&quot;), getRef().length());&#xA;} catch (Exception e) {&#xA;&#x9;return null;&#xA;}"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//RefSchemaDefinition/getJsonPointerAsList"
          body="EList&lt;String> jsonPointerAsList = new org.eclipse.emf.common.util.BasicEList&lt;String>();&#xA;try {&#xA;&#x9;String fragment = getFragment();&#xA;&#x9;if(fragment!=null &amp;&amp; !fragment.isBlank()) {&#xA;&#x9;&#x9;fragment = fragment.substring(1,fragment.length()); // take off &quot;#&quot;&#xA;&#x9;&#x9;if(&quot;/&quot;.equals(fragment.substring(0, 1)) ) {&#xA;&#x9;&#x9;&#x9;fragment = fragment.substring(1,fragment.length());&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;jsonPointerAsList.addAll(java.util.Arrays.asList(fragment.split(&quot;/&quot;)));&#xA;&#x9;}&#xA;} catch (Exception e) {&#xA;&#x9;return null;&#xA;}&#xA;return jsonPointerAsList;"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//RefSchemaDefinition/isOnlyFragment"
          body="return getRef().equals(getFragment());"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//JsonSchema">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//JsonSchema/schema"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//JsonSchema/findSchemaByJsonPointer"
          body="try {&#xA;&#x9;return getSchema().findSchemaByJsonPointer(jsonPointer,0);&#xA;} catch (Exception e) {&#xA;&#x9;return null;&#xA;}">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//JsonSchema/findSchemaByJsonPointer/jsonPointer"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//KeySchemaPair">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//KeySchemaPair/key"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//KeySchemaPair/value"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ContentMediaTypeSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//ContentMediaTypeSchemaDefinition/contentMediaType"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ExclusiveMinimumSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//ExclusiveMinimumSchemaDefinition/exclusiveMinimum"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//SchemaSchemaDefinition">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//SchemaSchemaDefinition/schema"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//PropertiesSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//PropertiesSchemaDefinition/keySchemaPairs"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//PropertiesSchemaDefinition/findSchemaByKey"
          body="return getKeySchemaPairs().stream().filter(ksp -> key.equals(ksp.getKey())).findFirst().map(KeySchemaPair::getValue).orElse(null);">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//PropertiesSchemaDefinition/findSchemaByKey/key"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//PropertyNamesSchemaDefinition">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//PropertyNamesSchemaDefinition/propertyNames"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//TypeAnyOf2">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//TypeAnyOf2/items"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//BooleanSchema">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//BooleanSchema/value"/>
      <genOperations ecoreOperation="jsonMetaschemaMM.ecore#//BooleanSchema/findSchemaByJsonPointer"
          body="if(currentIndex==jsonPointer.size()) {&#xA;&#x9;return this;&#xA;} else {&#xA;&#x9;return null;&#xA;}">
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//BooleanSchema/findSchemaByJsonPointer/jsonPointer"/>
        <genParameters ecoreParameter="jsonMetaschemaMM.ecore#//BooleanSchema/findSchemaByJsonPointer/currentIndex"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//NonNegativeInteger">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//NonNegativeInteger/value"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//NonNegativeIntegerDefault0">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//NonNegativeIntegerDefault0/value"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//SchemaObjectAdditionalProperties">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//SchemaObjectAdditionalProperties/key"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//SchemaObjectAdditionalProperties/additionalProperties"/>
    </genClasses>
    <genClasses image="false" ecoreClass="jsonMetaschemaMM.ecore#//SchemaObjectDependenciesProperties"/>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//SchemaObjectDependenciesAdditionalProperties">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//SchemaObjectDependenciesAdditionalProperties/key"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//SchemaObjectDependenciesAdditionalProperties/additionalProperties"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//SchemaObjectDependenciesAdditionalPropertiesAnyOf1">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//SchemaObjectDependenciesAdditionalPropertiesAnyOf1/anyOf1"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//SchemaObjectDependenciesAdditionalPropertiesAnyOf2">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//SchemaObjectDependenciesAdditionalPropertiesAnyOf2/anyOf2"/>
    </genClasses>
    <genClasses image="false" ecoreClass="jsonMetaschemaMM.ecore#//SchemaObjectDependenciesAdditionalPropertiesAnyOf"/>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ItemsAnyOf"/>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ItemsAnyOf1">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ItemsAnyOf1/anyOf1"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//ItemsAnyOf2">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference jsonMetaschemaMM.ecore#//ItemsAnyOf2/anyOf2"/>
    </genClasses>
    <genClasses ecoreClass="jsonMetaschemaMM.ecore#//TypeAnyOf1">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute jsonMetaschemaMM.ecore#//TypeAnyOf1/type"/>
    </genClasses>
    <genClasses image="false" ecoreClass="jsonMetaschemaMM.ecore#//TypeAnyOf"/>
  </genPackages>
</genmodel:GenModel>
