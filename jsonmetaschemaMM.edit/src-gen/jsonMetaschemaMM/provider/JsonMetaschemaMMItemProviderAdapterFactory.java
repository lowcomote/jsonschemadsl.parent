/**
 */
package jsonMetaschemaMM.provider;

import java.util.ArrayList;
import java.util.Collection;

import jsonMetaschemaMM.util.JsonMetaschemaMMAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class JsonMetaschemaMMItemProviderAdapterFactory extends JsonMetaschemaMMAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public JsonMetaschemaMMItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.ObjectSchema} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectSchemaItemProvider objectSchemaItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.ObjectSchema}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectSchemaAdapter() {
		if (objectSchemaItemProvider == null) {
			objectSchemaItemProvider = new ObjectSchemaItemProvider(this);
		}

		return objectSchemaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.MaximumSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MaximumSchemaDefinitionItemProvider maximumSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.MaximumSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMaximumSchemaDefinitionAdapter() {
		if (maximumSchemaDefinitionItemProvider == null) {
			maximumSchemaDefinitionItemProvider = new MaximumSchemaDefinitionItemProvider(this);
		}

		return maximumSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.WriteOnlySchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WriteOnlySchemaDefinitionItemProvider writeOnlySchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.WriteOnlySchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWriteOnlySchemaDefinitionAdapter() {
		if (writeOnlySchemaDefinitionItemProvider == null) {
			writeOnlySchemaDefinitionItemProvider = new WriteOnlySchemaDefinitionItemProvider(this);
		}

		return writeOnlySchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.CommentSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommentSchemaDefinitionItemProvider commentSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.CommentSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommentSchemaDefinitionAdapter() {
		if (commentSchemaDefinitionItemProvider == null) {
			commentSchemaDefinitionItemProvider = new CommentSchemaDefinitionItemProvider(this);
		}

		return commentSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.EnumSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumSchemaDefinitionItemProvider enumSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.EnumSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumSchemaDefinitionAdapter() {
		if (enumSchemaDefinitionItemProvider == null) {
			enumSchemaDefinitionItemProvider = new EnumSchemaDefinitionItemProvider(this);
		}

		return enumSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.UniqueItemsSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UniqueItemsSchemaDefinitionItemProvider uniqueItemsSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.UniqueItemsSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUniqueItemsSchemaDefinitionAdapter() {
		if (uniqueItemsSchemaDefinitionItemProvider == null) {
			uniqueItemsSchemaDefinitionItemProvider = new UniqueItemsSchemaDefinitionItemProvider(this);
		}

		return uniqueItemsSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.AnyOfSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnyOfSchemaDefinitionItemProvider anyOfSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.AnyOfSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnyOfSchemaDefinitionAdapter() {
		if (anyOfSchemaDefinitionItemProvider == null) {
			anyOfSchemaDefinitionItemProvider = new AnyOfSchemaDefinitionItemProvider(this);
		}

		return anyOfSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.StringArray} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringArrayItemProvider stringArrayItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.StringArray}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringArrayAdapter() {
		if (stringArrayItemProvider == null) {
			stringArrayItemProvider = new StringArrayItemProvider(this);
		}

		return stringArrayItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.TitleSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TitleSchemaDefinitionItemProvider titleSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.TitleSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTitleSchemaDefinitionAdapter() {
		if (titleSchemaDefinitionItemProvider == null) {
			titleSchemaDefinitionItemProvider = new TitleSchemaDefinitionItemProvider(this);
		}

		return titleSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.ItemsSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ItemsSchemaDefinitionItemProvider itemsSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.ItemsSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createItemsSchemaDefinitionAdapter() {
		if (itemsSchemaDefinitionItemProvider == null) {
			itemsSchemaDefinitionItemProvider = new ItemsSchemaDefinitionItemProvider(this);
		}

		return itemsSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.DefaultSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefaultSchemaDefinitionItemProvider defaultSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.DefaultSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefaultSchemaDefinitionAdapter() {
		if (defaultSchemaDefinitionItemProvider == null) {
			defaultSchemaDefinitionItemProvider = new DefaultSchemaDefinitionItemProvider(this);
		}

		return defaultSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.ThenSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ThenSchemaDefinitionItemProvider thenSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.ThenSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createThenSchemaDefinitionAdapter() {
		if (thenSchemaDefinitionItemProvider == null) {
			thenSchemaDefinitionItemProvider = new ThenSchemaDefinitionItemProvider(this);
		}

		return thenSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.MinLengthSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MinLengthSchemaDefinitionItemProvider minLengthSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.MinLengthSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMinLengthSchemaDefinitionAdapter() {
		if (minLengthSchemaDefinitionItemProvider == null) {
			minLengthSchemaDefinitionItemProvider = new MinLengthSchemaDefinitionItemProvider(this);
		}

		return minLengthSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.DefinitionsSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefinitionsSchemaDefinitionItemProvider definitionsSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.DefinitionsSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefinitionsSchemaDefinitionAdapter() {
		if (definitionsSchemaDefinitionItemProvider == null) {
			definitionsSchemaDefinitionItemProvider = new DefinitionsSchemaDefinitionItemProvider(this);
		}

		return definitionsSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.BooleanValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanValueItemProvider booleanValueItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.BooleanValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanValueAdapter() {
		if (booleanValueItemProvider == null) {
			booleanValueItemProvider = new BooleanValueItemProvider(this);
		}

		return booleanValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.MinItemsSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MinItemsSchemaDefinitionItemProvider minItemsSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.MinItemsSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMinItemsSchemaDefinitionAdapter() {
		if (minItemsSchemaDefinitionItemProvider == null) {
			minItemsSchemaDefinitionItemProvider = new MinItemsSchemaDefinitionItemProvider(this);
		}

		return minItemsSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.OneOfSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OneOfSchemaDefinitionItemProvider oneOfSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.OneOfSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOneOfSchemaDefinitionAdapter() {
		if (oneOfSchemaDefinitionItemProvider == null) {
			oneOfSchemaDefinitionItemProvider = new OneOfSchemaDefinitionItemProvider(this);
		}

		return oneOfSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.SchemaArray} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SchemaArrayItemProvider schemaArrayItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.SchemaArray}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSchemaArrayAdapter() {
		if (schemaArrayItemProvider == null) {
			schemaArrayItemProvider = new SchemaArrayItemProvider(this);
		}

		return schemaArrayItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.MaxPropertiesSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MaxPropertiesSchemaDefinitionItemProvider maxPropertiesSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.MaxPropertiesSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMaxPropertiesSchemaDefinitionAdapter() {
		if (maxPropertiesSchemaDefinitionItemProvider == null) {
			maxPropertiesSchemaDefinitionItemProvider = new MaxPropertiesSchemaDefinitionItemProvider(this);
		}

		return maxPropertiesSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.NullValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NullValueItemProvider nullValueItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.NullValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNullValueAdapter() {
		if (nullValueItemProvider == null) {
			nullValueItemProvider = new NullValueItemProvider(this);
		}

		return nullValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.MinimumSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MinimumSchemaDefinitionItemProvider minimumSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.MinimumSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMinimumSchemaDefinitionAdapter() {
		if (minimumSchemaDefinitionItemProvider == null) {
			minimumSchemaDefinitionItemProvider = new MinimumSchemaDefinitionItemProvider(this);
		}

		return minimumSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.StringValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringValueItemProvider stringValueItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.StringValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringValueAdapter() {
		if (stringValueItemProvider == null) {
			stringValueItemProvider = new StringValueItemProvider(this);
		}

		return stringValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.JsonDocument} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JsonDocumentItemProvider jsonDocumentItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.JsonDocument}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJsonDocumentAdapter() {
		if (jsonDocumentItemProvider == null) {
			jsonDocumentItemProvider = new JsonDocumentItemProvider(this);
		}

		return jsonDocumentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.MaxItemsSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MaxItemsSchemaDefinitionItemProvider maxItemsSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.MaxItemsSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMaxItemsSchemaDefinitionAdapter() {
		if (maxItemsSchemaDefinitionItemProvider == null) {
			maxItemsSchemaDefinitionItemProvider = new MaxItemsSchemaDefinitionItemProvider(this);
		}

		return maxItemsSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.FormatSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FormatSchemaDefinitionItemProvider formatSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.FormatSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFormatSchemaDefinitionAdapter() {
		if (formatSchemaDefinitionItemProvider == null) {
			formatSchemaDefinitionItemProvider = new FormatSchemaDefinitionItemProvider(this);
		}

		return formatSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.ReadOnlySchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReadOnlySchemaDefinitionItemProvider readOnlySchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.ReadOnlySchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReadOnlySchemaDefinitionAdapter() {
		if (readOnlySchemaDefinitionItemProvider == null) {
			readOnlySchemaDefinitionItemProvider = new ReadOnlySchemaDefinitionItemProvider(this);
		}

		return readOnlySchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.ObjectValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectValueItemProvider objectValueItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.ObjectValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectValueAdapter() {
		if (objectValueItemProvider == null) {
			objectValueItemProvider = new ObjectValueItemProvider(this);
		}

		return objectValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.TypeSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeSchemaDefinitionItemProvider typeSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.TypeSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeSchemaDefinitionAdapter() {
		if (typeSchemaDefinitionItemProvider == null) {
			typeSchemaDefinitionItemProvider = new TypeSchemaDefinitionItemProvider(this);
		}

		return typeSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.AdditionalPropertiesSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdditionalPropertiesSchemaDefinitionItemProvider additionalPropertiesSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.AdditionalPropertiesSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdditionalPropertiesSchemaDefinitionAdapter() {
		if (additionalPropertiesSchemaDefinitionItemProvider == null) {
			additionalPropertiesSchemaDefinitionItemProvider = new AdditionalPropertiesSchemaDefinitionItemProvider(this);
		}

		return additionalPropertiesSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.ElseSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElseSchemaDefinitionItemProvider elseSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.ElseSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElseSchemaDefinitionAdapter() {
		if (elseSchemaDefinitionItemProvider == null) {
			elseSchemaDefinitionItemProvider = new ElseSchemaDefinitionItemProvider(this);
		}

		return elseSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.IdSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IdSchemaDefinitionItemProvider idSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.IdSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIdSchemaDefinitionAdapter() {
		if (idSchemaDefinitionItemProvider == null) {
			idSchemaDefinitionItemProvider = new IdSchemaDefinitionItemProvider(this);
		}

		return idSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.ConstSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstSchemaDefinitionItemProvider constSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.ConstSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstSchemaDefinitionAdapter() {
		if (constSchemaDefinitionItemProvider == null) {
			constSchemaDefinitionItemProvider = new ConstSchemaDefinitionItemProvider(this);
		}

		return constSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.DependenciesSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DependenciesSchemaDefinitionItemProvider dependenciesSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.DependenciesSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDependenciesSchemaDefinitionAdapter() {
		if (dependenciesSchemaDefinitionItemProvider == null) {
			dependenciesSchemaDefinitionItemProvider = new DependenciesSchemaDefinitionItemProvider(this);
		}

		return dependenciesSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.NumberValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NumberValueItemProvider numberValueItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.NumberValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNumberValueAdapter() {
		if (numberValueItemProvider == null) {
			numberValueItemProvider = new NumberValueItemProvider(this);
		}

		return numberValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.RequiredSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequiredSchemaDefinitionItemProvider requiredSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.RequiredSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequiredSchemaDefinitionAdapter() {
		if (requiredSchemaDefinitionItemProvider == null) {
			requiredSchemaDefinitionItemProvider = new RequiredSchemaDefinitionItemProvider(this);
		}

		return requiredSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.DescriptionSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DescriptionSchemaDefinitionItemProvider descriptionSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.DescriptionSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDescriptionSchemaDefinitionAdapter() {
		if (descriptionSchemaDefinitionItemProvider == null) {
			descriptionSchemaDefinitionItemProvider = new DescriptionSchemaDefinitionItemProvider(this);
		}

		return descriptionSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.MinPropertiesSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MinPropertiesSchemaDefinitionItemProvider minPropertiesSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.MinPropertiesSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMinPropertiesSchemaDefinitionAdapter() {
		if (minPropertiesSchemaDefinitionItemProvider == null) {
			minPropertiesSchemaDefinitionItemProvider = new MinPropertiesSchemaDefinitionItemProvider(this);
		}

		return minPropertiesSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.PatternPropertiesSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PatternPropertiesSchemaDefinitionItemProvider patternPropertiesSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.PatternPropertiesSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPatternPropertiesSchemaDefinitionAdapter() {
		if (patternPropertiesSchemaDefinitionItemProvider == null) {
			patternPropertiesSchemaDefinitionItemProvider = new PatternPropertiesSchemaDefinitionItemProvider(this);
		}

		return patternPropertiesSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.AdditionalItemsSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdditionalItemsSchemaDefinitionItemProvider additionalItemsSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.AdditionalItemsSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdditionalItemsSchemaDefinitionAdapter() {
		if (additionalItemsSchemaDefinitionItemProvider == null) {
			additionalItemsSchemaDefinitionItemProvider = new AdditionalItemsSchemaDefinitionItemProvider(this);
		}

		return additionalItemsSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.KeyValuePair} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KeyValuePairItemProvider keyValuePairItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.KeyValuePair}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKeyValuePairAdapter() {
		if (keyValuePairItemProvider == null) {
			keyValuePairItemProvider = new KeyValuePairItemProvider(this);
		}

		return keyValuePairItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.ExamplesSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExamplesSchemaDefinitionItemProvider examplesSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.ExamplesSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExamplesSchemaDefinitionAdapter() {
		if (examplesSchemaDefinitionItemProvider == null) {
			examplesSchemaDefinitionItemProvider = new ExamplesSchemaDefinitionItemProvider(this);
		}

		return examplesSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.IfSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IfSchemaDefinitionItemProvider ifSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.IfSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIfSchemaDefinitionAdapter() {
		if (ifSchemaDefinitionItemProvider == null) {
			ifSchemaDefinitionItemProvider = new IfSchemaDefinitionItemProvider(this);
		}

		return ifSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.AllOfSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AllOfSchemaDefinitionItemProvider allOfSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.AllOfSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAllOfSchemaDefinitionAdapter() {
		if (allOfSchemaDefinitionItemProvider == null) {
			allOfSchemaDefinitionItemProvider = new AllOfSchemaDefinitionItemProvider(this);
		}

		return allOfSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.ContentEncodingSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContentEncodingSchemaDefinitionItemProvider contentEncodingSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.ContentEncodingSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContentEncodingSchemaDefinitionAdapter() {
		if (contentEncodingSchemaDefinitionItemProvider == null) {
			contentEncodingSchemaDefinitionItemProvider = new ContentEncodingSchemaDefinitionItemProvider(this);
		}

		return contentEncodingSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.MultipleOfSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultipleOfSchemaDefinitionItemProvider multipleOfSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.MultipleOfSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultipleOfSchemaDefinitionAdapter() {
		if (multipleOfSchemaDefinitionItemProvider == null) {
			multipleOfSchemaDefinitionItemProvider = new MultipleOfSchemaDefinitionItemProvider(this);
		}

		return multipleOfSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.PatternSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PatternSchemaDefinitionItemProvider patternSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.PatternSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPatternSchemaDefinitionAdapter() {
		if (patternSchemaDefinitionItemProvider == null) {
			patternSchemaDefinitionItemProvider = new PatternSchemaDefinitionItemProvider(this);
		}

		return patternSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.ContainsSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContainsSchemaDefinitionItemProvider containsSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.ContainsSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainsSchemaDefinitionAdapter() {
		if (containsSchemaDefinitionItemProvider == null) {
			containsSchemaDefinitionItemProvider = new ContainsSchemaDefinitionItemProvider(this);
		}

		return containsSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.NotSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NotSchemaDefinitionItemProvider notSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.NotSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNotSchemaDefinitionAdapter() {
		if (notSchemaDefinitionItemProvider == null) {
			notSchemaDefinitionItemProvider = new NotSchemaDefinitionItemProvider(this);
		}

		return notSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.ExclusiveMaximumSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExclusiveMaximumSchemaDefinitionItemProvider exclusiveMaximumSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.ExclusiveMaximumSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExclusiveMaximumSchemaDefinitionAdapter() {
		if (exclusiveMaximumSchemaDefinitionItemProvider == null) {
			exclusiveMaximumSchemaDefinitionItemProvider = new ExclusiveMaximumSchemaDefinitionItemProvider(this);
		}

		return exclusiveMaximumSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.MaxLengthSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MaxLengthSchemaDefinitionItemProvider maxLengthSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.MaxLengthSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMaxLengthSchemaDefinitionAdapter() {
		if (maxLengthSchemaDefinitionItemProvider == null) {
			maxLengthSchemaDefinitionItemProvider = new MaxLengthSchemaDefinitionItemProvider(this);
		}

		return maxLengthSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.RefSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RefSchemaDefinitionItemProvider refSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.RefSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRefSchemaDefinitionAdapter() {
		if (refSchemaDefinitionItemProvider == null) {
			refSchemaDefinitionItemProvider = new RefSchemaDefinitionItemProvider(this);
		}

		return refSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.JsonSchema} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JsonSchemaItemProvider jsonSchemaItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.JsonSchema}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJsonSchemaAdapter() {
		if (jsonSchemaItemProvider == null) {
			jsonSchemaItemProvider = new JsonSchemaItemProvider(this);
		}

		return jsonSchemaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.KeySchemaPair} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KeySchemaPairItemProvider keySchemaPairItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.KeySchemaPair}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKeySchemaPairAdapter() {
		if (keySchemaPairItemProvider == null) {
			keySchemaPairItemProvider = new KeySchemaPairItemProvider(this);
		}

		return keySchemaPairItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.ContentMediaTypeSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContentMediaTypeSchemaDefinitionItemProvider contentMediaTypeSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.ContentMediaTypeSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContentMediaTypeSchemaDefinitionAdapter() {
		if (contentMediaTypeSchemaDefinitionItemProvider == null) {
			contentMediaTypeSchemaDefinitionItemProvider = new ContentMediaTypeSchemaDefinitionItemProvider(this);
		}

		return contentMediaTypeSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.ExclusiveMinimumSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExclusiveMinimumSchemaDefinitionItemProvider exclusiveMinimumSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.ExclusiveMinimumSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExclusiveMinimumSchemaDefinitionAdapter() {
		if (exclusiveMinimumSchemaDefinitionItemProvider == null) {
			exclusiveMinimumSchemaDefinitionItemProvider = new ExclusiveMinimumSchemaDefinitionItemProvider(this);
		}

		return exclusiveMinimumSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.SchemaSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SchemaSchemaDefinitionItemProvider schemaSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.SchemaSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSchemaSchemaDefinitionAdapter() {
		if (schemaSchemaDefinitionItemProvider == null) {
			schemaSchemaDefinitionItemProvider = new SchemaSchemaDefinitionItemProvider(this);
		}

		return schemaSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.PropertiesSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertiesSchemaDefinitionItemProvider propertiesSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.PropertiesSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertiesSchemaDefinitionAdapter() {
		if (propertiesSchemaDefinitionItemProvider == null) {
			propertiesSchemaDefinitionItemProvider = new PropertiesSchemaDefinitionItemProvider(this);
		}

		return propertiesSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.PropertyNamesSchemaDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyNamesSchemaDefinitionItemProvider propertyNamesSchemaDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.PropertyNamesSchemaDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyNamesSchemaDefinitionAdapter() {
		if (propertyNamesSchemaDefinitionItemProvider == null) {
			propertyNamesSchemaDefinitionItemProvider = new PropertyNamesSchemaDefinitionItemProvider(this);
		}

		return propertyNamesSchemaDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.ArrayValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArrayValueItemProvider arrayValueItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.ArrayValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArrayValueAdapter() {
		if (arrayValueItemProvider == null) {
			arrayValueItemProvider = new ArrayValueItemProvider(this);
		}

		return arrayValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.TypeAnyOf2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeAnyOf2ItemProvider typeAnyOf2ItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.TypeAnyOf2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeAnyOf2Adapter() {
		if (typeAnyOf2ItemProvider == null) {
			typeAnyOf2ItemProvider = new TypeAnyOf2ItemProvider(this);
		}

		return typeAnyOf2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.BooleanSchema} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanSchemaItemProvider booleanSchemaItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.BooleanSchema}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanSchemaAdapter() {
		if (booleanSchemaItemProvider == null) {
			booleanSchemaItemProvider = new BooleanSchemaItemProvider(this);
		}

		return booleanSchemaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.NonNegativeInteger} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NonNegativeIntegerItemProvider nonNegativeIntegerItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.NonNegativeInteger}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNonNegativeIntegerAdapter() {
		if (nonNegativeIntegerItemProvider == null) {
			nonNegativeIntegerItemProvider = new NonNegativeIntegerItemProvider(this);
		}

		return nonNegativeIntegerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.NonNegativeIntegerDefault0} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NonNegativeIntegerDefault0ItemProvider nonNegativeIntegerDefault0ItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.NonNegativeIntegerDefault0}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNonNegativeIntegerDefault0Adapter() {
		if (nonNegativeIntegerDefault0ItemProvider == null) {
			nonNegativeIntegerDefault0ItemProvider = new NonNegativeIntegerDefault0ItemProvider(this);
		}

		return nonNegativeIntegerDefault0ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.SchemaObjectAdditionalProperties} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SchemaObjectAdditionalPropertiesItemProvider schemaObjectAdditionalPropertiesItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.SchemaObjectAdditionalProperties}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSchemaObjectAdditionalPropertiesAdapter() {
		if (schemaObjectAdditionalPropertiesItemProvider == null) {
			schemaObjectAdditionalPropertiesItemProvider = new SchemaObjectAdditionalPropertiesItemProvider(this);
		}

		return schemaObjectAdditionalPropertiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.SchemaObjectDependenciesAdditionalProperties} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SchemaObjectDependenciesAdditionalPropertiesItemProvider schemaObjectDependenciesAdditionalPropertiesItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.SchemaObjectDependenciesAdditionalProperties}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSchemaObjectDependenciesAdditionalPropertiesAdapter() {
		if (schemaObjectDependenciesAdditionalPropertiesItemProvider == null) {
			schemaObjectDependenciesAdditionalPropertiesItemProvider = new SchemaObjectDependenciesAdditionalPropertiesItemProvider(this);
		}

		return schemaObjectDependenciesAdditionalPropertiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.SchemaObjectDependenciesAdditionalPropertiesAnyOf1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SchemaObjectDependenciesAdditionalPropertiesAnyOf1ItemProvider schemaObjectDependenciesAdditionalPropertiesAnyOf1ItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.SchemaObjectDependenciesAdditionalPropertiesAnyOf1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSchemaObjectDependenciesAdditionalPropertiesAnyOf1Adapter() {
		if (schemaObjectDependenciesAdditionalPropertiesAnyOf1ItemProvider == null) {
			schemaObjectDependenciesAdditionalPropertiesAnyOf1ItemProvider = new SchemaObjectDependenciesAdditionalPropertiesAnyOf1ItemProvider(this);
		}

		return schemaObjectDependenciesAdditionalPropertiesAnyOf1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.SchemaObjectDependenciesAdditionalPropertiesAnyOf2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SchemaObjectDependenciesAdditionalPropertiesAnyOf2ItemProvider schemaObjectDependenciesAdditionalPropertiesAnyOf2ItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.SchemaObjectDependenciesAdditionalPropertiesAnyOf2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSchemaObjectDependenciesAdditionalPropertiesAnyOf2Adapter() {
		if (schemaObjectDependenciesAdditionalPropertiesAnyOf2ItemProvider == null) {
			schemaObjectDependenciesAdditionalPropertiesAnyOf2ItemProvider = new SchemaObjectDependenciesAdditionalPropertiesAnyOf2ItemProvider(this);
		}

		return schemaObjectDependenciesAdditionalPropertiesAnyOf2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.ItemsAnyOf1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ItemsAnyOf1ItemProvider itemsAnyOf1ItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.ItemsAnyOf1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createItemsAnyOf1Adapter() {
		if (itemsAnyOf1ItemProvider == null) {
			itemsAnyOf1ItemProvider = new ItemsAnyOf1ItemProvider(this);
		}

		return itemsAnyOf1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.ItemsAnyOf2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ItemsAnyOf2ItemProvider itemsAnyOf2ItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.ItemsAnyOf2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createItemsAnyOf2Adapter() {
		if (itemsAnyOf2ItemProvider == null) {
			itemsAnyOf2ItemProvider = new ItemsAnyOf2ItemProvider(this);
		}

		return itemsAnyOf2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link jsonMetaschemaMM.TypeAnyOf1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeAnyOf1ItemProvider typeAnyOf1ItemProvider;

	/**
	 * This creates an adapter for a {@link jsonMetaschemaMM.TypeAnyOf1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeAnyOf1Adapter() {
		if (typeAnyOf1ItemProvider == null) {
			typeAnyOf1ItemProvider = new TypeAnyOf1ItemProvider(this);
		}

		return typeAnyOf1ItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (objectSchemaItemProvider != null) objectSchemaItemProvider.dispose();
		if (maximumSchemaDefinitionItemProvider != null) maximumSchemaDefinitionItemProvider.dispose();
		if (writeOnlySchemaDefinitionItemProvider != null) writeOnlySchemaDefinitionItemProvider.dispose();
		if (commentSchemaDefinitionItemProvider != null) commentSchemaDefinitionItemProvider.dispose();
		if (enumSchemaDefinitionItemProvider != null) enumSchemaDefinitionItemProvider.dispose();
		if (uniqueItemsSchemaDefinitionItemProvider != null) uniqueItemsSchemaDefinitionItemProvider.dispose();
		if (anyOfSchemaDefinitionItemProvider != null) anyOfSchemaDefinitionItemProvider.dispose();
		if (stringArrayItemProvider != null) stringArrayItemProvider.dispose();
		if (titleSchemaDefinitionItemProvider != null) titleSchemaDefinitionItemProvider.dispose();
		if (itemsSchemaDefinitionItemProvider != null) itemsSchemaDefinitionItemProvider.dispose();
		if (defaultSchemaDefinitionItemProvider != null) defaultSchemaDefinitionItemProvider.dispose();
		if (thenSchemaDefinitionItemProvider != null) thenSchemaDefinitionItemProvider.dispose();
		if (minLengthSchemaDefinitionItemProvider != null) minLengthSchemaDefinitionItemProvider.dispose();
		if (definitionsSchemaDefinitionItemProvider != null) definitionsSchemaDefinitionItemProvider.dispose();
		if (booleanValueItemProvider != null) booleanValueItemProvider.dispose();
		if (minItemsSchemaDefinitionItemProvider != null) minItemsSchemaDefinitionItemProvider.dispose();
		if (oneOfSchemaDefinitionItemProvider != null) oneOfSchemaDefinitionItemProvider.dispose();
		if (schemaArrayItemProvider != null) schemaArrayItemProvider.dispose();
		if (maxPropertiesSchemaDefinitionItemProvider != null) maxPropertiesSchemaDefinitionItemProvider.dispose();
		if (nullValueItemProvider != null) nullValueItemProvider.dispose();
		if (minimumSchemaDefinitionItemProvider != null) minimumSchemaDefinitionItemProvider.dispose();
		if (stringValueItemProvider != null) stringValueItemProvider.dispose();
		if (jsonDocumentItemProvider != null) jsonDocumentItemProvider.dispose();
		if (maxItemsSchemaDefinitionItemProvider != null) maxItemsSchemaDefinitionItemProvider.dispose();
		if (formatSchemaDefinitionItemProvider != null) formatSchemaDefinitionItemProvider.dispose();
		if (readOnlySchemaDefinitionItemProvider != null) readOnlySchemaDefinitionItemProvider.dispose();
		if (objectValueItemProvider != null) objectValueItemProvider.dispose();
		if (typeSchemaDefinitionItemProvider != null) typeSchemaDefinitionItemProvider.dispose();
		if (additionalPropertiesSchemaDefinitionItemProvider != null) additionalPropertiesSchemaDefinitionItemProvider.dispose();
		if (elseSchemaDefinitionItemProvider != null) elseSchemaDefinitionItemProvider.dispose();
		if (idSchemaDefinitionItemProvider != null) idSchemaDefinitionItemProvider.dispose();
		if (constSchemaDefinitionItemProvider != null) constSchemaDefinitionItemProvider.dispose();
		if (dependenciesSchemaDefinitionItemProvider != null) dependenciesSchemaDefinitionItemProvider.dispose();
		if (numberValueItemProvider != null) numberValueItemProvider.dispose();
		if (requiredSchemaDefinitionItemProvider != null) requiredSchemaDefinitionItemProvider.dispose();
		if (descriptionSchemaDefinitionItemProvider != null) descriptionSchemaDefinitionItemProvider.dispose();
		if (minPropertiesSchemaDefinitionItemProvider != null) minPropertiesSchemaDefinitionItemProvider.dispose();
		if (patternPropertiesSchemaDefinitionItemProvider != null) patternPropertiesSchemaDefinitionItemProvider.dispose();
		if (additionalItemsSchemaDefinitionItemProvider != null) additionalItemsSchemaDefinitionItemProvider.dispose();
		if (keyValuePairItemProvider != null) keyValuePairItemProvider.dispose();
		if (examplesSchemaDefinitionItemProvider != null) examplesSchemaDefinitionItemProvider.dispose();
		if (ifSchemaDefinitionItemProvider != null) ifSchemaDefinitionItemProvider.dispose();
		if (allOfSchemaDefinitionItemProvider != null) allOfSchemaDefinitionItemProvider.dispose();
		if (contentEncodingSchemaDefinitionItemProvider != null) contentEncodingSchemaDefinitionItemProvider.dispose();
		if (multipleOfSchemaDefinitionItemProvider != null) multipleOfSchemaDefinitionItemProvider.dispose();
		if (patternSchemaDefinitionItemProvider != null) patternSchemaDefinitionItemProvider.dispose();
		if (containsSchemaDefinitionItemProvider != null) containsSchemaDefinitionItemProvider.dispose();
		if (notSchemaDefinitionItemProvider != null) notSchemaDefinitionItemProvider.dispose();
		if (exclusiveMaximumSchemaDefinitionItemProvider != null) exclusiveMaximumSchemaDefinitionItemProvider.dispose();
		if (maxLengthSchemaDefinitionItemProvider != null) maxLengthSchemaDefinitionItemProvider.dispose();
		if (refSchemaDefinitionItemProvider != null) refSchemaDefinitionItemProvider.dispose();
		if (jsonSchemaItemProvider != null) jsonSchemaItemProvider.dispose();
		if (keySchemaPairItemProvider != null) keySchemaPairItemProvider.dispose();
		if (contentMediaTypeSchemaDefinitionItemProvider != null) contentMediaTypeSchemaDefinitionItemProvider.dispose();
		if (exclusiveMinimumSchemaDefinitionItemProvider != null) exclusiveMinimumSchemaDefinitionItemProvider.dispose();
		if (schemaSchemaDefinitionItemProvider != null) schemaSchemaDefinitionItemProvider.dispose();
		if (propertiesSchemaDefinitionItemProvider != null) propertiesSchemaDefinitionItemProvider.dispose();
		if (propertyNamesSchemaDefinitionItemProvider != null) propertyNamesSchemaDefinitionItemProvider.dispose();
		if (arrayValueItemProvider != null) arrayValueItemProvider.dispose();
		if (typeAnyOf2ItemProvider != null) typeAnyOf2ItemProvider.dispose();
		if (booleanSchemaItemProvider != null) booleanSchemaItemProvider.dispose();
		if (nonNegativeIntegerItemProvider != null) nonNegativeIntegerItemProvider.dispose();
		if (nonNegativeIntegerDefault0ItemProvider != null) nonNegativeIntegerDefault0ItemProvider.dispose();
		if (schemaObjectAdditionalPropertiesItemProvider != null) schemaObjectAdditionalPropertiesItemProvider.dispose();
		if (schemaObjectDependenciesAdditionalPropertiesItemProvider != null) schemaObjectDependenciesAdditionalPropertiesItemProvider.dispose();
		if (schemaObjectDependenciesAdditionalPropertiesAnyOf1ItemProvider != null) schemaObjectDependenciesAdditionalPropertiesAnyOf1ItemProvider.dispose();
		if (schemaObjectDependenciesAdditionalPropertiesAnyOf2ItemProvider != null) schemaObjectDependenciesAdditionalPropertiesAnyOf2ItemProvider.dispose();
		if (itemsAnyOf1ItemProvider != null) itemsAnyOf1ItemProvider.dispose();
		if (itemsAnyOf2ItemProvider != null) itemsAnyOf2ItemProvider.dispose();
		if (typeAnyOf1ItemProvider != null) typeAnyOf1ItemProvider.dispose();
	}

}
